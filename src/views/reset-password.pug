doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", href="/styles/style.css")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
    title NotesU
  body
    div.m-4(class='h-[100vh]')
      div.flex.justify-center.items-center.h-full#emailAccount
        form.bg-white.shadow-md.rounded.px-8.pt-6.pb-8.mb-4#restorePassword(autocomplete="off")
          h1.text-3xl NotesU
          div.mb-4
            label.block.text-gray-700.text-sm.font-bold.mb-2 Password
            label
            input.shadow.appearance-none.border.rounded.w-full.py-2.px-3.text-gray-700.leading-tightclass(focus:outline-none.focus:shadow-outline)(type='text', name='password', value='')#password
          div
          div.mb-4
            label.block.text-gray-700.text-sm.font-bold.mb-2 Repeat password
            label
            input.shadow.appearance-none.border.rounded.w-full.py-2.px-3.text-gray-700.leading-tightclass(focus:outline-none.focus:shadow-outline)(type='text', name='repeatPassword', value='')#repeatPassword
          div
          div.my-4.hidden#errorMsg
            p#msgError
          div
          div.flex.items-center.justify-between
            button.bg-blue-500.text-white.font-bold.py-2.px-4.roundedclass(focus:outline-none.focus:shadow-outline.hover:bg-blue-700)(type='submit') Restore
            button#btn
          div
        form
      div
    div
    script.
      const updatePassword = async (password) => {
        const btn = document.getElementById('btn')
        btn.textContent = 'Sending'
        btn.setAttribute('disabled', 'true')
        try {
          const body = JSON.stringify({ password })
          const headers = { 'Content-Type': 'application/json' }
          const resp = await fetch('https://52a4-45-173-6-27.ngrok.io/auth/restore-password', { method: 'POST', headers, body })
          const data = await resp.json()
          if(data.msg && data.msg === 'Restore password success'){
            Swal.fire({
            title: data.msg,
            icon: 'success',
            confirmButtonText: 'OK',
            showCloseButton: true
            }).then((r) => window.close())
          }
        } catch(error){
          console.log(error)
        }
        btn.textContent = 'Send'
        btn.setAttribute('disabled', 'false')
      }

      const form = document.getElementById('restorePassword')
      form.addEventListener('submit', async (e) => {
        e.preventDefault()
        const password = document.getElementById('password').value
        const repeatPassword = document.getElementById('repeatPassword').value
        const errorMsg = document.getElementById('errorMsg')
        const msgError = document.getElementById('msgError')
        if(!password) return
        let bandera = false
        let msg
        if(password === repeatPassword && password.length > 8) bandera = true
        if(password.length < 8) msg = 'La contasena debe tener mas de 8 caracteres'
        if(password !== repeatPassword) msg = 'Las contrasenas no coinciden'
        if(!bandera) {
          errorMsg.classList.remove('hidden')
          msgError.textContent = msg ? msg : 'Error'
          return
        } else {
          errorMsg.classList.add('hidden')
        }
        await updatePassword(password)
      })

    script
