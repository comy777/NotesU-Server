export interface AppRoutes {
  home: string
  auth: string
  users: string
  categories: string
}

export interface RegisterForm {
  name?: string
  email: string
  password: string
}

export interface PayloadToken {
  uuid: string
}

export interface Token {
  token: string
}

export interface UserMoongoose {
  _id: string
  name: string
  email: string
  password: string
  profile_image: string
  state: boolean
  createdAt: Date
  updatedAt: Date
  emailValidate: boolean
  __v: number
}

export interface NoteInterface {
  id?: string
  title?: string
  body?: string
  background?: string
  state?: boolean
  categorie?: string
}

export interface NoteSave {
  id: string
  title: string
  body: string
  user: string
  files?: FileInterface[]
}

export interface FileInterface {
  file_name: string
  ref: string
  url: string
  state?: boolean
  note: string
  user: string,
  typeFile: string
  icon: string
}

// Generated by https://quicktype.io

export interface NoteMongoose {
  _id: string;
  title: string;
  body: string;
  background: string;
  createdAt: string;
  updatedAt: string;
  files: { filesData: FileMongose[], mediaData: FileMongose[] };
}

export interface FileMongose {
  file_name: string;
  ref: string;
  url: string;
  state: boolean;
  note: string;
  user: string;
  typeFile: string;
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
}

export interface FaticonTokenResponse {
  data: DataToken;
}

export interface DataToken {
  token: string;
  expires: number;
}

export interface FaticonResponse {
  data: IconsData[];
  metadata: Metadata;
}

export interface IconsData {
  id: number;
  description: string;
  colors: string;
  color: Color;
  shape: Shape;
  family_id: number;
  family_name: FamilyName;
  team_name: TeamName;
  added: number;
  pack_id: number;
  pack_name: PackName;
  pack_items: number;
  tags: string;
  equivalents: number;
  images: { [key: string]: string };
}

export enum Color {
  Color = "color",
}

export enum FamilyName {
  Special = "Special",
}

export enum PackName {
  DocumentType = "Document Type",
}

export enum Shape {
  Fill = "fill",
}

export enum TeamName {
  Freepik = "Freepik",
}

export interface Metadata {
  page: number;
  count: number;
  total: number;
}

export interface NoteSaveAPI {
  notes: NoteApi[];
}

export interface NoteApi {
  _id: string;
  title: string;
  body: string;
  background: string;
  files: FileApi[];
  createdAt: string;
  updatedAt: string;
  categorie: string
}

export interface FileApi {
  _id: string;
  file_name: string;
  ref: string;
  url: string;
  state: boolean;
  note: string;
  user: string;
  typeFile: string;
  icon: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
}

export interface DecodedToken {
  uuid: string
  iat: number
  exp: number
}

export interface UpdateUser extends Object {
  name?: string
  profile_image?: string
}